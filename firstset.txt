FirstSet(0) 'start':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '*' | 'IDENTIFIER' | '('
FirstSet(1) 'primary_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '('
FirstSet(2) 'postfix_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '('
FirstSet(3) 'postfix_expression_tail':  'epsilon' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '('
FirstSet(4) 'primary_expression_ops':  '[' | '(' | '.' | 'PTR_OP' | 'INC_OP' | 'DEC_OP'
FirstSet(5) 'primary_expression_ops_args':  ')' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(6) 'unary_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(7) 'unary_expression_prefix':  'INC_OP' | 'DEC_OP'
FirstSet(8) 'unary_expression_sizeof':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(9) 'unary_operator':  '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(10) 'cast_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(11) 'type_name_paren':  '('
FirstSet(12) 'multiplicative_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(13) 'multiplicative_expression_tail':  'epsilon' | '*' | '/' | '%'
FirstSet(14) 'multiplicative_expression_ops':  '*' | '/' | '%'
FirstSet(15) 'additive_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(16) 'additive_expression_tail':  'epsilon' | '+' | '-'
FirstSet(17) 'additive_expression_ops':  '+' | '-'
FirstSet(18) 'shift_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(19) 'shift_expression_tail':  'epsilon' | 'LEFT_OP' | 'RIGHT_OP'
FirstSet(20) 'shift_expression_ops':  'LEFT_OP' | 'RIGHT_OP'
FirstSet(21) 'relational_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(22) 'relational_expression_tail':  'epsilon' | '<' | '>' | 'LE_OP' | 'GE_OP'
FirstSet(23) 'relational_expression_ops':  '<' | '>' | 'LE_OP' | 'GE_OP'
FirstSet(24) 'equality_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(25) 'equality_expression_tail':  'epsilon' | 'EQ_OP' | 'NE_OP'
FirstSet(26) 'equality_expression_ops':  'EQ_OP' | 'NE_OP'
FirstSet(27) 'and_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(28) 'and_expression_tail':  'epsilon' | '&'
FirstSet(29) 'exclusive_or_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(30) 'exclusive_or_expression_tail':  'epsilon' | '^'
FirstSet(31) 'inclusive_or_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(32) 'inclusive_or_expression_tail':  'epsilon' | '|'
FirstSet(33) 'logical_and_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(34) 'logical_and_expression_tail':  'epsilon' | 'AND_OP'
FirstSet(35) 'logical_or_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(36) 'logical_or_expression_tail':  'epsilon' | 'OR_OP'
FirstSet(37) 'conditional_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(38) 'conditional_expression_tail':  'epsilon' | '?'
FirstSet(39) 'assignment_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(40) 'assignment_operator':  'ASSIGN' | 'MUL_ASSIGN' | 'DIV_ASSIGN' | 'MOD_ASSIGN' | 'ADD_ASSIGN' | 'SUB_ASSIGN' | 'LEFT_ASSIGN' | 'RIGHT_ASSIGN' | 'AND_ASSIGN' | 'XOR_ASSIGN' | 'OR_ASSIGN'
FirstSet(41) 'expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(42) 'expression_tail':  'epsilon' | ','
FirstSet(43) 'constant_expression':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(44) 'declaration':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(45) 'init_declarator_list_opt':  'epsilon' | '*' | 'IDENTIFIER' | '('
FirstSet(46) 'declaration_specifiers':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(47) 'declaration_specifiers_prefix':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(48) 'declaration_specifiers_tail':  'epsilon' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(49) 'init_declarator_list':  '*' | 'IDENTIFIER' | '('
FirstSet(50) 'init_declarator_list_tail':  'epsilon' | ','
FirstSet(51) 'init_declarator':  '*' | 'IDENTIFIER' | '('
FirstSet(52) 'init_declarator_suffix':  'epsilon' | '='
FirstSet(53) 'storage_class_specifier':  'typedef' | 'extern' | 'static' | 'auto' | 'register'
FirstSet(54) 'type_specifier':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum'
FirstSet(55) 'struct_or_union_specifier':  'struct' | 'union'
FirstSet(56) 'struct_or_union_specifier_suffix':  'IDENTIFIER' | '{'
FirstSet(57) 'struct_or_union_specifier_suffix_list_opt':  'epsilon' | '{'
FirstSet(58) 'struct_or_union':  'struct' | 'union'
FirstSet(59) 'struct_declaration_list':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(60) 'struct_declaration_list_tail':  'epsilon' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(61) 'struct_declaration':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(62) 'specifier_qualifier_list':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(63) 'specifier_qualifier_list_opt':  'epsilon' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(64) 'specifier_qualifier_list_prefix':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(65) 'struct_declarator_list':  ':' | '*' | 'IDENTIFIER' | '('
FirstSet(66) 'struct_declarator_list_tail':  'epsilon' | ','
FirstSet(67) 'struct_declarator':  ':' | '*' | 'IDENTIFIER' | '('
FirstSet(68) 'struct_declarator_suffix':  'epsilon' | ':'
FirstSet(69) 'enum_specifier':  'enum'
FirstSet(70) 'enum_specifier_suffix':  '{' | 'IDENTIFIER'
FirstSet(71) 'enum_specifier_suffix_opt':  'epsilon' | '{'
FirstSet(72) 'enumerator_list':  'IDENTIFIER'
FirstSet(73) 'enumerator_list_tail':  'epsilon' | ','
FirstSet(74) 'enumerator':  'IDENTIFIER'
FirstSet(75) 'enumerator_suffix':  'epsilon' | 'ENUM_EQ'
FirstSet(76) 'type_qualifier':  'const' | 'volatile'
FirstSet(77) 'declarator':  '*' | 'IDENTIFIER' | '('
FirstSet(78) 'direct_declarator':  'IDENTIFIER' | '('
FirstSet(79) 'direct_declarator_prefix':  'IDENTIFIER' | '('
FirstSet(80) 'direct_declarator_tail':  'epsilon' | 'IDENTIFIER' | '('
FirstSet(81) 'direct_declarator_ops':  '[' | '('
FirstSet(82) 'direct_declarator_ops_array':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ']'
FirstSet(83) 'direct_declarator_ops_func':  ')' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | 'IDENTIFIER'
FirstSet(84) 'pointer':  '*'
FirstSet(85) 'pointer_suffix':  'epsilon' | '*' | 'const' | 'volatile'
FirstSet(86) 'type_qualifier_list':  'const' | 'volatile'
FirstSet(87) 'type_qualifier_list_tail':  'epsilon' | 'const' | 'volatile'
FirstSet(88) 'parameter_type_list':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(89) 'parameter_type_list_tail':  'epsilon' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | ','
FirstSet(90) 'parameter_list':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(91) 'parameter_list_tail':  'epsilon' | ','
FirstSet(92) 'parameter_declaration':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(93) 'parameter_declaration_suffix':  'epsilon' | '*' | 'IDENTIFIER' | '(' | '['
FirstSet(94) 'identifier_list':  'IDENTIFIER'
FirstSet(95) 'identifier_list_tail':  'epsilon' | ','
FirstSet(96) 'type_name':  'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(97) 'type_name_suffix':  'epsilon' | '*' | '(' | '['
FirstSet(98) 'abstract_declarator':  '*' | '(' | '['
FirstSet(99) 'abstract_declarator_suffix':  'epsilon' | '(' | '['
FirstSet(100) 'direct_abstract_declarator':  '(' | '['
FirstSet(101) 'direct_abstract_declarator_suffix':  '[' | '('
FirstSet(102) 'direct_abstract_declarator_paren_suffix':  '*' | '(' | '[' | ')' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(103) 'direct_abstract_declarator_array':  ']' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(104) 'direct_abstract_declarator_func':  ')' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(105) 'initializer':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | '{'
FirstSet(106) 'initializer_suffix':  '}' | ','
FirstSet(107) 'initializer_list':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | '{'
FirstSet(108) 'initializer_list_tail':  'epsilon' | ','
FirstSet(109) 'statement':  'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(110) 'labeled_statement':  'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT'
FirstSet(111) 'labeled_statement_prefix':  'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT'
FirstSet(112) 'compound_statement':  '{'
FirstSet(113) 'compound_statement_suffix':  '}' | 'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(114) 'compound_statement_suffix_decl':  '}' | 'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(115) 'declaration_list':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(116) 'declaration_list_tail':  'epsilon' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile'
FirstSet(117) 'statement_list':  'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(118) 'statement_list_tail':  'epsilon' | 'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(119) 'expression_statement':  'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | ';'
FirstSet(120) 'empty_expression_statement':  ';'
FirstSet(121) 'expression_opt':  'epsilon' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!'
FirstSet(122) 'selection_statement':  'if' | 'switch'
FirstSet(123) 'selection_statement_suffix':  'epsilon' | 'else'
FirstSet(124) 'iteration_statement':  'while' | 'do' | 'for'
FirstSet(125) 'while_suffix':  ';' | 'LABEL_IDENTIFIER' | 'CASE' | 'DEFAULT' | '{' | 'IDENTIFIER' | 'CONSTANT' | 'STRING_LITERAL' | '(' | 'INC_OP' | 'DEC_OP' | 'SIZEOF' | '&' | '*' | '+' | '-' | '~' | '!' | 'if' | 'switch' | 'while' | 'do' | 'for' | 'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(126) 'jump_statement':  'GOTO' | 'CONTINUE' | 'BREAK' | 'RETURN'
FirstSet(127) 'translation_unit':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '*' | 'IDENTIFIER' | '('
FirstSet(128) 'translation_unit_tail':  'epsilon' | 'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '*' | 'IDENTIFIER' | '('
FirstSet(129) 'external_declaration':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '*' | 'IDENTIFIER' | '('
FirstSet(130) 'function_definition':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '*' | 'IDENTIFIER' | '('
FirstSet(131) 'function_definition_decl_specifiers':  'typedef' | 'extern' | 'static' | 'auto' | 'register' | 'void' | 'char' | 'short' | 'int' | 'long' | 'float' | 'double' | 'signed' | 'unsigned' | 'TYPE_NAME' | 'struct' | 'union' | 'enum' | 'const' | 'volatile' | '{'
